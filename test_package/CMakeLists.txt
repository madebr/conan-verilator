cmake_minimum_required(VERSION 2.8.12)
project(PackageTest CXX)

include("${CMAKE_BINARY_DIR}/conanbuildinfo.cmake")
conan_basic_setup()

set(CMAKE_VERBOSE_MAKEFILE ON)

include(verilator.cmake)

find_program(GMAKE_BIN
    NAMES make gmake
)

add_custom_command(
    COMMENT "Running Verilator"
    OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/obj_dir/Vblinky.mk"
        "${CMAKE_CURRENT_BINARY_DIR}/obj_dir/Vblinky.h"
    COMMAND ${VERILATOR_BIN} --trace -Wall -cc "${CMAKE_CURRENT_SOURCE_DIR}/blinky.v"
    WORKING_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}"
)

set(VM_USER_CFLAGS)
if(CONAN_LIBCXX STREQUAL "libstdc++11" OR CONAN_SETTINGS_COMPILER_LIBCXX STREQUAL "libstdc++11")
    list(APPEND VM_USER_CFLAGS "-D_GLIBCXX_USE_CXX11_ABI=1")
elseif(CONAN_LIBCXX STREQUAL "libstdc++" OR CONAN_SETTINGS_COMPILER_LIBCXX STREQUAL "libstdc++")
    list(APPEND VM_USER_CFLAGS "-D_GLIBCXX_USE_CXX11_ABI=0")
endif()

if(CONAN_SETTINGS_ARCH STREQUAL "x86_64")
    list(APPEND VM_USER_CFLAGS -m64)
elseif(CONAN_SETTINGS_ARCH STREQUAL "x86")
    list(APPEND VM_USER_CFLAGS -m32)
endif()
message("BEFORE REPLACE: ${VM_USER_CFLAGS}")
string(REPLACE ";" " " VM_USER_CFLAGS "${VM_USER_CFLAGS}")
message("AFTER REPLACE: ${VM_USER_CFLAGS}")

add_custom_command(
    COMMENT "Compiling sources generated by Verilator"
    OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/obj_dir/Vblinky__ALL.a"
    DEPENDS "${CMAKE_CURRENT_BINARY_DIR}/obj_dir/Vblinky.mk"
        "${CMAKE_CURRENT_BINARY_DIR}/obj_dir/Vblinky.h"
    COMMAND ${GMAKE_BIN} --no-print-directory -C "${CMAKE_CURRENT_BINARY_DIR}/obj_dir" -f Vblinky.mk "VM_USER_CFLAGS=${VM_USER_CFLAGS}"
    WORKING_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}"
)

add_executable(blinky
    blinky.cpp
        "${CMAKE_CURRENT_BINARY_DIR}/obj_dir/Vblinky.h"
    "${CMAKE_CURRENT_BINARY_DIR}/obj_dir/Vblinky__ALL.a"

    "${CONAN_USER_VERILATOR_VERILATOR_ROOT_INCLUDE}/verilated.cpp"
    "${CONAN_USER_VERILATOR_VERILATOR_ROOT_INCLUDE}/verilated_vcd_c.cpp"

)

target_link_libraries(blinky
    PUBLIC
        ${CONAN_LIBS}
    "${CMAKE_CURRENT_BINARY_DIR}/obj_dir/Vblinky__ALL.a"
)

target_include_directories(blinky
    PUBLIC
        "${CMAKE_CURRENT_BINARY_DIR}/obj_dir"
        "${CONAN_USER_VERILATOR_VERILATOR_ROOT_INCLUDE}"
)

# CTest is a testing tool that can be used to test your project.
# enable_testing()
# add_test(NAME blinky
#          WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/bin
#          COMMAND blinky)
